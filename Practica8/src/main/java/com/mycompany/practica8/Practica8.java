/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.practica8;

import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;

/**
 *
 * @author carlo
 */
public class Practica8 extends javax.swing.JFrame {

    /**
     * Creates new form Practica6
     */
    private JFileChooser jf =  new JFileChooser();
    private File fichero;
    private final String title;
    
    public Practica8() {
        title="Edición Imágenes (Práctica 8)";
        
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        initComponents();
        this.setTitle(title);
        
        this.threshold.setEnabled(false);
        this.close.setEnabled(false);
        
        closeProgram();
    }

    private void closeProgram(){
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
           public void windowClosing(WindowEvent e){
               exitAplication();
           }
        });
        this.setVisible(true);
    }
    
    private void openImage(){
        
        jf.addChoosableFileFilter(new FileNameExtensionFilter("Texto", "txt"));
        jf.addChoosableFileFilter(new FileNameExtensionFilter("Fotos", "jpg", "jpeg", "png"));
        
        int res = jf.showOpenDialog(null);
        
        if(res==JFileChooser.APPROVE_OPTION){
            closeImage();
            fichero = jf.getSelectedFile();
            //lienzo1.openImage(fichero.getAbsolutePath());
            InternalWindow window = new InternalWindow(this, fichero.getName());
            desktop.add(window);
            window.setVisible(true);
            window.openImage(fichero.getAbsolutePath());
            
            this.setTitle(fichero.getName()+" - "+title);
            this.threshold.setEnabled(true);
            this.close.setEnabled(true);
        }
    }
    
    public void closeImage(){
        fichero=null;
        //lienzo1.closeImage();
        JInternalFrame[] windows = desktop.getAllFrames();
        for (JInternalFrame window : windows) {
            window.dispose();
        }
        this.setTitle(title);

        this.threshold.setEnabled(false);
        this.close.setEnabled(false);
    }
    
    private void exitAplication(){
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Quieres cerrar la aplicación?."
                ,"Cerrar Aplicación", JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            System.exit(0);
            setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        files = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        filter = new javax.swing.JMenu();
        threshold = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktop.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                desktopComponentResized(evt);
            }
        });

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        files.setMnemonic('f');
        files.setText("Ficheros");

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        open.setText("Abrir");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        files.add(open);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        close.setText("Cerrar");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        files.add(close);
        files.add(jSeparator1);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exit.setText("Salir");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        files.add(exit);

        jMenuBar1.add(files);

        edit.setMnemonic('e');
        edit.setText("Edición");

        filter.setText("Filtros");

        threshold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        threshold.setText("Umbralizado");
        threshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdActionPerformed(evt);
            }
        });
        filter.add(threshold);

        edit.add(filter);

        jMenuBar1.add(edit);

        help.setMnemonic('a');
        help.setText("Ayuda");

        about.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        about.setText("Acerca de");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help.add(about);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        try{
            if(fichero!=null){
                int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se cerrarán todas las ventanas internas abiertas, "
                        + "\n             ¿Aún desea abrir otra imágen?.", "Abrir Imágen", JOptionPane.YES_NO_OPTION);
                if(res==JOptionPane.YES_OPTION){
                    openImage();
                }
            }
            else{
                openImage();
            }
        } catch(IllegalArgumentException e){
            closeImage();
            JOptionPane.showMessageDialog(rootPane, "ERROR: Tipo de fichero no compatible o corrupto,"
                    + "\n                 utilizar formato (jpg, jpeg o png)."
                    , "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
            closeImage();
            JOptionPane.showMessageDialog(rootPane, "ERROR: Al abrir el fichero."
                    , "ERROR", JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_openActionPerformed

    private void thresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdActionPerformed
        String input = JOptionPane.showInputDialog(rootPane, "Introduzca el valor de umbral.");
        if(input!=null){
            try{
                int umbral = Integer.parseInt(input);
                
                InternalWindow window = new InternalWindow(null,fichero.getName()+" - Umbral: "+umbral);
                desktop.add(window);
                window.setVisible(true);
                window.thresHoldImage(fichero.getAbsolutePath(), umbral);
                
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane, "ERROR: Introducir solo números"
                        , "ERROR", JOptionPane.ERROR_MESSAGE);
                thresholdActionPerformed(evt);
            }
        }      
    }//GEN-LAST:event_thresholdActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se cerrarán todas las ventanas internas, "
                + "\n             ¿Aún desea cerrar la imágen actual?.", "Cerrar Imágen", JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            closeImage();
        }
    }//GEN-LAST:event_closeActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        exitAplication();
    }//GEN-LAST:event_exitActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        JOptionPane.showMessageDialog(rootPane,  "Aplicación para aplicar a una imagen un umbral elegida por el usuario.\n" +
                                                 "Product Version: Edición de imágenes 2.0\n" +
                                                 "Java: 1.8.0_211; Java HotSpot(TM) 64-Bit Server VM 25.211-b12\n" +
                                                 "Runtime: Java(TM) SE Runtime Environment 1.8.0_211-b12"
                        , "AYUDA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutActionPerformed

    private void desktopComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_desktopComponentResized
        JInternalFrame[] windows = desktop.getAllFrames();
        for (JInternalFrame window : windows) {
            Point point = window.getLocation();
            if(point.getX()>desktop.getWidth() || point.getY()>desktop.getHeight()){
                window.setLocation(new Point(0,0));
            }
        }
    }//GEN-LAST:event_desktopComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem close;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu files;
    private javax.swing.JMenu filter;
    private javax.swing.JMenu help;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem open;
    private javax.swing.JMenuItem threshold;
    // End of variables declaration//GEN-END:variables
}
